FROM erlang:20-alpine
MAINTAINER "Denver Williams <denver@debian.nz>"

# Install Erlang/Elixir
RUN apk -U upgrade && \
    apk --update --no-cache add inotify-tools ncurses-libs git make g++ wget ca-certificates openssl curl bash \
    && \
    update-ca-certificates --fresh && \
    curl -sSL https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s

# Add local node module binaries to PATH
ENV PATH $PATH:node_modules/.bin:/root/.kiex/builds/elixir-git/bin

RUN source $HOME/.kiex/scripts/kiex && \
    kiex install 1.9.1 && \
    kiex use 1.9.1 && \
    kiex default 1.9.1

# Golang
# RUN curl -O https://dl.google.com/go/go1.11.13.linux-amd64.tar.gz
#
# RUN tar -C /usr/local -xzf go1.11.13.linux-amd64.tar.gz 
#
# ENV PATH $PATH:/usr/local/go/bin

# RUN echo "installing go version 1.12.7..." 
# RUN apk add --no-cache --virtual .build-deps bash gcc musl-dev openssl go 
# RUN wget -O go.tgz https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz 
# RUN tar -C /usr/local -xzf go.tgz 
# WORKDIR /usr/local/go/src/ 
# RUN pwd
# RUN ls -al
# RUN ./make.bash 
# ENV PATH $PATH:/usr/local/go/bin:$PATH
# ENV GOPATH $GOPATH:/opt/go/ 
# ENV PATH $PATH:$GOPATH/bin 
# RUN apk del .build-deps 
# RUN go version
